services:
  api:
    depends_on:
      mysql:
        condition: service_healthy
    build:
      context: .
      dockerfile: demos/Dockerfile
    attach: true
    environment:
      TZ: America/Chicago
      NODE_ENV: development
      MYSQL_HOST: mysql
      MYSQL_DATABASE: default_database
      MYSQL_USER: user
      MYSQL_PASS: password
      JWT_TRUSTED_ISSUERS: '[{ "iss": "unified-auth", "url": "http://fakeauth/jwks" }]'
      JWT_TRUSTED_CLIENTIDS: reqquest
      RESET_DB_ON_STARTUP: 'true'
      ELASTIC_APM_ACTIVE: 'false'
      VALID_ORIGIN_HOSTS: ui
      DEMO_INSTANCE: '${DEMO_INSTANCE:-default}'
    healthcheck:
      test: ["CMD", "wget", "-q", "http://127.0.0.1/health"]
      interval: 2s
      timeout: 0.5s
      retries: 500
  ui:
    build:
      context: .
      dockerfile: ui/Dockerfile
    attach: false
    environment:
      PUBLIC_API_BASE: http://api
      PUBLIC_AUTH_REDIRECT: http://fakeauth/login?clientId=reqquest&returnUrl=http%3A%2F%2Fui
      PUBLIC_DEMO_INSTANCE: '${DEMO_INSTANCE:-default}'
    healthcheck:
      test: ["CMD", "wget", "-q", "http://127.0.0.1/"]
      interval: 2s
      timeout: 0.5s
      retries: 500
  testing-container:
    depends_on:
      ui:
        condition: service_healthy
      api:
        condition: service_healthy
      fakeauth:
        condition: service_healthy
    build:
      context: .
      dockerfile: test/Dockerfile
    attach: true
    environment:
      AUTH_REDIRECT: http://fakeauth/login?clientId=reqquest&returnUrl=http%3A%2F%2Fui
    volumes:
      - ./test/test-results:/test-results
  fakeauth:
    image: registry.its.txstate.edu/unified-auth-stub:dev
    attach: false
    healthcheck:
      test: ["CMD", "wget", "-q", "http://127.0.0.1/health"]
      interval: 2s
      timeout: 0.5s
      retries: 500
  mysql:
    image: percona/percona-server:8.4
    attach: false
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: default_database
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - ./healthcheck.sh:/healthcheck.sh
    healthcheck:
      test: ["CMD", "sh", "/healthcheck.sh"]
      interval: 1s
      timeout: 0.5s
      retries: 500
